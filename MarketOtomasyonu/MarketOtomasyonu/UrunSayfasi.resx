<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>